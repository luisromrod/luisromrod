name: despliegue_remoto self-hosted runner
on:
  push:
    branches:
      - main # O la rama que desees

jobs:
  deploy:
    runs-on: [self-hosted, linux]

    steps:
      - name: Copiar código
        uses: actions/checkout@v3

      - name: Añadir clave SSH al agente
        uses: webfactory/ssh-agent@v0.4.1
        with:
         ssh-private-key: ${{secrets.SSH_PRIVATE_KEY_172}} # Usa el nombre del secreto que creaste

      - name: Conectar y ejecutar comandos en el servidor
        uses: appleboy/ssh-action@master
        with:
          host: ${{secrets.SSH_HOST_172}} # Tu nombre de host
          username: ${{secrets.SSH_USERNAME_172}} # Tu nombre de usuario
          key: ${{secrets.SSH_PRIVATE_KEY_172}} # Clave privada
          script: |
            echo "### path servidor 172 ###"
            pwd
            cd /home/GIT
            mv Joseantonio.lopez /home/GIT/Joseantonio.lopez_$(date +'%Y-%m-%d')
            ls -lrt
            echo '### Clonar el repositorio ###'
            git clone -b main https://github.com/joseantonio-lpz/Joseantonio.lopez.git
            sleep 40
            ls -lrt
            echo '### Detener el contenedor, eliminimar el contenedor y la imagen ###'
            docker ps
            docker stop nginx-hello-world
            sleep 40
            docker rm nginx-hello-world
            docker images
            sleep 40
            docker rmi nginx-hello-world
            docker images
            echo '### Ejecutar el build y el deploy ###'
            cd /home/GIT/Joseantonio.lopez/nginx-hello-world-deployment
            ls -lrt
            docker build -t nginx-hello-world .
            sleep 40
            docker run -d `-v dataprotection-keys:/root/.aspnet/DataProtection-Keys` --name nginx-hello-world -p 8086:80 nginx-hello-world
            sleep 20
            echo '### contenedores corriendo ###'
            docker ps -a
